<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>aws on Edd&#39;s blog</title>
    <link>/tags/aws/</link>
    <description>Recent content in aws on Edd&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 19 May 2019 00:00:00 +0000</lastBuildDate><atom:link href="/tags/aws/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Serving an ECS service via both ALB and NLB</title>
      <link>/posts/exposing-static-ip-of-ecs-service/</link>
      <pubDate>Sun, 19 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/exposing-static-ip-of-ecs-service/</guid>
      <description>How to serve an ECS service via both public ALB and public NLB.</description>
      <content>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;One of our clients has a firewall that allows whitelisting only IPv4 (no hostnames).
For that reason, our API has to be accessible via list of static ip address.
The service itself is a classic ECS service.
Each container is a member of a target group.
That target group is assigned to an ALB.
When using Application Load Balancer, the hostname is given.
Hostname is static and doesn&amp;rsquo;t change over time.
But we have no control over to which IPv4s it gets resolved.
The challange here is: &lt;em&gt;&amp;ldquo;How to identify the service via a list of static IP addresses?&amp;quot;&lt;/em&gt;
This problem is tackled by &lt;a href=&#34;https://aws.amazon.com/blogs/networking-and-content-delivery/using-static-ip-addresses-for-application-load-balancers/&#34;&gt;AWS on this blog post&lt;/a&gt;, but there is a fine print here.
The ALB itself has to be internal one - which is the opposite what we are running.&lt;/p&gt;
&lt;h2 id=&#34;architecture&#34;&gt;Architecture&lt;/h2&gt;
&lt;p&gt;Outline:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a nginx PROXY based on ecs and nginx docker container.&lt;/li&gt;
&lt;li&gt;API can be accessed via ALB with all its advantages.&lt;/li&gt;
&lt;li&gt;Created NLB exposes created Elastic IPs (public).&lt;/li&gt;
&lt;li&gt;NLB passes traffic to the target group, which points to ECS service that runs nginx proxy.&lt;/li&gt;
&lt;li&gt;Nginx server uses &lt;code&gt;PROXY_PASS&lt;/code&gt; derective to pass traffic to public ALB.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/nlb-alb-ecs-aws-architecture.svg&#34; alt=&#34;architecture&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;code&#34;&gt;Code&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/eddwardo/nlb-alb-ecs-service&#34;&gt;All code for this post is here&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;docker-image&#34;&gt;Docker image&lt;/h3&gt;
&lt;p&gt;This is the core that we can test on localhost.&lt;/p&gt;
&lt;p&gt;To do this, go to &lt;a href=&#34;https://github.com/eddwardo/nlb-alb-ecs-service/tree/master/nginx-docker&#34;&gt;this folder on your machine&lt;/a&gt; and run the &lt;code&gt;docker-compose up&lt;/code&gt;.
The expected output is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nginx-proxy-forwarder_1  | Requests will be forwarder to: google.com
nginx-proxy-forwarder_1  | Config:
nginx-proxy-forwarder_1  | *******************************
nginx-proxy-forwarder_1  | server {
nginx-proxy-forwarder_1  |     error_log /dev/stdout debug;
nginx-proxy-forwarder_1  |     listen 8080;
nginx-proxy-forwarder_1  |     location / {
nginx-proxy-forwarder_1  |         proxy_pass https://google.com;
nginx-proxy-forwarder_1  |     }
nginx-proxy-forwarder_1  | }
nginx-proxy-forwarder_1  | *******************************
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The container points to google.com, try it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ curl -I localhost:9003
HTTP/1.1 301 Moved Permanently
Server: nginx/1.14.2
Date: Sun, 19 May 2019 20:46:00 GMT
Content-Type: text/html; charset=UTF-8
Content-Length: 220
Connection: keep-alive
Location: https://www.google.com/
Expires: Tue, 18 Jun 2019 20:46:00 GMT
Cache-Control: public, max-age=2592000
X-XSS-Protection: 0
X-Frame-Options: SAMEORIGIN
Alt-Svc: quic=&amp;quot;:443&amp;quot;; ma=2592000; v=&amp;quot;46,44,43,39&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Expected logs:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 172.28.0.1 - - [19/May/2019:20:46:00 +0000] &amp;quot;HEAD / HTTP/1.1&amp;quot; 301 0 &amp;quot;-&amp;quot; &amp;quot;curl/7.54.0&amp;quot; &amp;quot;-&amp;quot;
 2019/05/19 20:46:00 [info] 12#12: *7 client 172.28.0.1 closed keepalive connection
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It is fairly simple: config + Dockerfile.
First snippet is the contents of the &lt;code&gt;Dockerfile&lt;/code&gt; and the second is the &lt;code&gt;run.sh&lt;/code&gt; script.&lt;/p&gt;
&lt;p&gt;Note that the nginx config is generated by the &lt;code&gt;run.sh&lt;/code&gt;, meaning it gets generated each time container boots up.
The goal is to be able to configure nginx based on &lt;code&gt;API_ENDPOINT&lt;/code&gt; environment variable.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;FROM nginx:stable-alpine
RUN mkdir /nginx/
COPY run.sh /nginx/
ENTRYPOINT [&amp;quot;/nginx/run.sh&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;#!/bin/sh
set -e

cat &amp;lt;&amp;lt;EOF &amp;gt; /etc/nginx/conf.d/passthrough.conf
server {
    error_log /dev/stdout debug;
    listen 8080;
    location / {
        proxy_pass https://$API_ENDPOINT;
    }
}
EOF

echo &amp;quot;Requests will be forwarder to: $API_ENDPOINT&amp;quot;

echo &amp;quot;Config:&amp;quot;
echo &amp;quot;*******************************&amp;quot;
cat /etc/nginx/conf.d/passthrough.conf
echo &amp;quot;*******************************&amp;quot;
nginx -g &amp;quot;daemon off;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;terraform-module&#34;&gt;Terraform module&lt;/h2&gt;
&lt;p&gt;If you don&amp;rsquo;t know terraform you can find a gentle introduction &lt;a href=&#34;https://www.terraform.io/intro/index.html&#34;&gt;here&lt;/a&gt;.
It is a tool for defining architecture as code.
You define a desired state of your architecture and terraform tries to achieve it.
This code is for educational purpose, clone it a refine it for your needs.
And give me maybe a star on github ;)&lt;/p&gt;
&lt;h3 id=&#34;proxy-ecs-service&#34;&gt;Proxy ECS Service&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;/images/nlb-ecs-nginx.png&#34; alt=&#34;ecs-service&#34;&gt;&lt;/p&gt;
&lt;p&gt;To pass the traffic to the target service, provision the container above as a simple ecs service.
The entire &lt;a href=&#34;https://github.com/eddwardo/nlb-alb-ecs-service/blob/master/ecs_service.tf&#34;&gt;ECS part is on github&lt;/a&gt;.
I want to focus on 2 key issues here.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The target domain you want to proxy to is defined by the variable &lt;code&gt;target_service_domain_name&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-tf&#34; data-lang=&#34;tf&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;template_file&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ecs_task_container_definitions&amp;#34;&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;template&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;file(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;path&lt;/span&gt;.module&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/container-definition.json&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;

  var&lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;container_name&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;local&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;service_name&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;

    &lt;span style=&#34;color:#a6e22e&#34;&gt;image&lt;/span&gt;          = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;var.&lt;span style=&#34;color:#a6e22e&#34;&gt;docker_image&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;version&lt;/span&gt;        = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;var.&lt;span style=&#34;color:#a6e22e&#34;&gt;docker_image_version&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;cpu&lt;/span&gt;            = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;var.&lt;span style=&#34;color:#a6e22e&#34;&gt;ecs_cpu&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;memory&lt;/span&gt;         = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;var.&lt;span style=&#34;color:#a6e22e&#34;&gt;ecs_memory&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;container_port&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;local&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;container_port&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;api_endpoint&lt;/span&gt;   = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;var.&lt;span style=&#34;color:#a6e22e&#34;&gt;target_service_domain_name&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:443&amp;#34;&lt;/span&gt;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;the &lt;code&gt;container-definition.json&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;[
  {
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${container_name}&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;image&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${image}:${version}&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;cpu&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;cpu&lt;/span&gt;},
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;memoryReservation&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;memory&lt;/span&gt;},
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;essential&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;portMappings&amp;#34;&lt;/span&gt;: [{
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;containerPort&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;container_port&lt;/span&gt;},
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;protocol&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tcp&amp;#34;&lt;/span&gt;
    }],
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;environment&amp;#34;&lt;/span&gt; : [
        { &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;API_ENDPOINT&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${api_endpoint}&amp;#34;&lt;/span&gt; }
    ]
  }]&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;the ecs task must run in &lt;code&gt;awsvpc&lt;/code&gt; network mode. This is required to attach the task to the NLB target group later.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-tf&#34; data-lang=&#34;tf&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;resource&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aws_ecs_task_definition&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;task&amp;#34;&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;family&lt;/span&gt;                = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;local&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;service_name&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;container_definitions&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;data.&lt;span style=&#34;color:#a6e22e&#34;&gt;template_file&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ecs_task_container_definitions&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;rendered&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;task_role_arn&lt;/span&gt;         = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_iam_role&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ecs_task&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;arn&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;  # each task gets its own net interface
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;network_mode&lt;/span&gt;          = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;awsvpc&amp;#34;&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;networking&#34;&gt;Networking&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;/Anlb-networking.png&#34; alt=&#34;nlb-listener&#34;&gt;{:height=&amp;ldquo;400&amp;rdquo; width=&amp;ldquo;400&amp;rdquo; .absolute-center}&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/eddwardo/nlb-alb-ecs-service/blob/master/nlb.tf&#34;&gt;Click on this, to get the full code for the module&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This part is a bit more trickier, we need:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/elasticloadbalancing/latest/network/introduction.html&#34;&gt;Networking Load Balancer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-tf&#34; data-lang=&#34;tf&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;resource&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aws_lb&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nlb&amp;#34;&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;         = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;var.&lt;span style=&#34;color:#a6e22e&#34;&gt;environment&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;local&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;service_name&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;internal&lt;/span&gt;     = &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;idle_timeout&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;60&amp;#34;&lt;/span&gt;

  &lt;span style=&#34;color:#a6e22e&#34;&gt;load_balancer_type&lt;/span&gt;         = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;network&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;enable_deletion_protection&lt;/span&gt; = &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;

  &lt;span style=&#34;color:#a6e22e&#34;&gt;subnet_mapping&lt;/span&gt; = [
    {
      &lt;span style=&#34;color:#a6e22e&#34;&gt;subnet_id&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;var.&lt;span style=&#34;color:#a6e22e&#34;&gt;lb_subnet_ids&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#a6e22e&#34;&gt;allocation_id&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_eip&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;lb1&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    },
    {
      &lt;span style=&#34;color:#a6e22e&#34;&gt;subnet_id&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;var.&lt;span style=&#34;color:#a6e22e&#34;&gt;lb_subnet_ids&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#a6e22e&#34;&gt;allocation_id&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_eip&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;lb2&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    },
  ]

  &lt;span style=&#34;color:#a6e22e&#34;&gt;enable_cross_zone_load_balancing&lt;/span&gt; = &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;ip_address_type&lt;/span&gt;                  = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ipv4&amp;#34;&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html&#34;&gt;2 Elastic IPs as endpoints for the above LB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-tf&#34; data-lang=&#34;tf&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# dont use count due to the bug: https://github.com/hashicorp/terraform/issues/4944
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;resource&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aws_eip&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lb1&amp;#34;&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;vpc&lt;/span&gt;=&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt; }
&lt;span style=&#34;color:#66d9ef&#34;&gt;resource&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aws_eip&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lb2&amp;#34;&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;vpc&lt;/span&gt;=&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html#target-type&#34;&gt;Target group of type IP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-tf&#34; data-lang=&#34;tf&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;resource&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aws_lb_target_group&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tg_for_nlb&amp;#34;&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;        = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;var.&lt;span style=&#34;color:#a6e22e&#34;&gt;environment&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;local&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;service_name&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-tg-for-nlb&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;protocol&lt;/span&gt;    = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;TCP&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;port&lt;/span&gt;        = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;local&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;container_port&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;vpc_id&lt;/span&gt;      = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;var.&lt;span style=&#34;color:#a6e22e&#34;&gt;vpc_id&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;target_type&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ip&amp;#34;&lt;/span&gt;

  &lt;span style=&#34;color:#a6e22e&#34;&gt;health_check&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;port&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;local&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;container_port&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;interval&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;
  }

  &lt;span style=&#34;color:#a6e22e&#34;&gt;stickiness&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;    = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lb_cookie&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;enabled&lt;/span&gt; = &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/elasticloadbalancing/latest/network/create-tls-listener.html&#34;&gt;TLS load balancer listener&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-tf&#34; data-lang=&#34;tf&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;resource&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aws_lb_listener&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nlb_listener&amp;#34;&lt;/span&gt; {

  &lt;span style=&#34;color:#a6e22e&#34;&gt;load_balancer_arn&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;module.&lt;span style=&#34;color:#a6e22e&#34;&gt;nlb&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;nlb_arn&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;port&lt;/span&gt;              = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;443&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;protocol&lt;/span&gt;          = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;TLS&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;ssl_policy&lt;/span&gt;        = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ELBSecurityPolicy-TLS-1-2-2017-01&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;certificate_arn&lt;/span&gt;   = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;data.&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_acm_certificate&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;cert&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;arn&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;

  &lt;span style=&#34;color:#a6e22e&#34;&gt;default_action&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;target_group_arn&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_lb_target_group&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;tg_for_nlb&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;arn&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;             = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;forward&amp;#34;&lt;/span&gt;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/rrsets-working-with.html&#34;&gt;Route 53 record&lt;/a&gt; and &lt;a href=&#34;https://aws.amazon.com/certificate-manager/getting-started/&#34;&gt;ACM certificate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-tf&#34; data-lang=&#34;tf&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;resource&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aws_route53_record&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;domain_to_eips&amp;#34;&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;zone_id&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;var.&lt;span style=&#34;color:#a6e22e&#34;&gt;hosted_zone_id&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;    = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;var.&lt;span style=&#34;color:#a6e22e&#34;&gt;domain_name&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;    = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;ttl&lt;/span&gt;     = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;300&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;records&lt;/span&gt; = [
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_eip&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;lb1&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;public_ip&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_eip&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;lb2&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;public_ip&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;,
  ]
}
&lt;span style=&#34;color:#66d9ef&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aws_acm_certificate&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cert&amp;#34;&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;domain&lt;/span&gt;   = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;var.&lt;span style=&#34;color:#a6e22e&#34;&gt;domain_name&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;statuses&lt;/span&gt; = [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ISSUED&amp;#34;&lt;/span&gt;]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;It is indeed a lot.&lt;/p&gt;
&lt;p&gt;Provisioning it by hand would take around an hour to get right.
Terraform can do it not only faster, but also give you a sense of control over all these resources.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Boto, s3 and remote metadata</title>
      <link>/posts/boto-s3-and-remote-metadata/</link>
      <pubDate>Wed, 01 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>/posts/boto-s3-and-remote-metadata/</guid>
      <description>Setting remote metadata for files on s3 might be tricky, lets take a peek</description>
      <content>&lt;p&gt;Using boto to store files on s3 might be a little bit confusing when it comes to store metadata for files. Normally you would expect that &lt;code&gt;key.set_metadata&lt;/code&gt; saves data remotely on s3. In fact &lt;code&gt;set_metadata&lt;/code&gt; stores your keys locally in python dict.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; bucket&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;new_key(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;testing-file&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; key&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_contents_from_string(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;testing content&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; key&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_metadata(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;from metadata&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; key&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_metadata(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;from metadata&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In example above you can get metadata form key instance, but what if you get your file from s3 again? Metadata will be a empty dict.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; key&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_metadata(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; None
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; True&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;set_remote_metadata&lt;/code&gt; is the method you probably are looking for.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; key&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_remote_metadata&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;?&lt;/span&gt;
Type:       instancemethod
String Form:&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;bound ey:&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; key&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_remote_metadata&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; method&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; of&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; testing&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt;gt;
File:       &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;lib&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;python2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;site&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;packages&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;boto&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;s3&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;key&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;py
Definition: key&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_remote_metadata(self, metadata_plus, metadata_minus, preserve_acl, headers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;None)
Docstring:  no docstring&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Interface to that method is more then weird but it does the job.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; bucket&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_key(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;testing-file&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; key&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_remote_metadata({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;this is remote metadata&amp;#39;&lt;/span&gt;}, {}, True)
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; remote_key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; bucket&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_key(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;testing-file&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; remote_key&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;metadata
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;this is remote metadata&amp;#39;&lt;/span&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In fact boto stores files metadata in headers by adding &lt;!-- raw HTML omitted --&gt;x-amx-meta&lt;!-- raw HTML omitted --&gt; prefix, you can check that by downloading file directly.
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; requests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://you_bucket.s3.amazonaws.com/testing-file&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;headers[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;x-amz-meta-hello&amp;#39;&lt;/span&gt;]
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; this &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; remote metadata&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;If you want to update file headers without meta prefix, you can do it easily:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; key&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_remote_metadata({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;custom/type&amp;#39;&lt;/span&gt;}, {}, True)
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; requests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://{}.s3.amazonaws.com/testing-file&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;headers[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;content-type&amp;#39;&lt;/span&gt;]
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;custom/type&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
